<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on qiaocc's blog</title><link>https://blog.qiaocco.com/post/</link><description>Recent content in Posts on qiaocc's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 15 Mar 2023 23:38:11 +0800</lastBuildDate><atom:link href="https://blog.qiaocco.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>代码随想录算法训练营第一天| 704. 二分查找、27. 移除元素</title><link>https://blog.qiaocco.com/post/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%B8%80%E5%A4%A9/</link><pubDate>Wed, 15 Mar 2023 23:38:11 +0800</pubDate><guid>https://blog.qiaocco.com/post/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%B8%80%E5%A4%A9/</guid><description>704.二分查找 链接 思路：二分法。注意边界条件，左闭右闭还是左闭右开。 1 2 3 4 5 6 7 8 9 10 11 12 class Solution: def search(self, nums: List[int], target: int) -&amp;gt; int: left, right = 0, len(nums)-1 while left &amp;lt;= right: # 左闭右</description></item><item><title>操作系统概念(05) 进程调度.md</title><link>https://blog.qiaocco.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B505-%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6/</link><pubDate>Fri, 06 May 2022 23:35:41 +0800</pubDate><guid>https://blog.qiaocco.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B505-%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6/</guid><description>进程调度 讨论cpu调度的概念和算法 1.基本概念 多道程序的目标：多个进程同时处于内存，当一个进程等待时，操作系统将CPU交给另个进程，有效利用</description></item><item><title>golang slice扩容</title><link>https://blog.qiaocco.com/post/slice%E6%89%A9%E5%AE%B9/</link><pubDate>Fri, 25 Jun 2021 14:31:39 +0800</pubDate><guid>https://blog.qiaocco.com/post/slice%E6%89%A9%E5%AE%B9/</guid><description>先看一个例子： 1 2 3 4 5 s1 := []int{1, 2} println(len(s1), cap(s1)) // 2 2 s1 = append(s1, 3, 4, 5) println(len(s1), cap(s1)) // 5 6，cap从2扩容到6，为什么不是5？ 扩容规则 源码： 1 2 3 4 5 6 7 8 9 10 11 12 13</description></item><item><title>操作系统概念(04) 多线程编程</title><link>https://blog.qiaocco.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B504-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/</link><pubDate>Wed, 23 Jun 2021 10:19:06 +0800</pubDate><guid>https://blog.qiaocco.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B504-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/</guid><description>多线程编程 1. 概述 线程是CPU使用的基本单元。它包括线程ID、程序计数器、寄存器组和堆栈。 一个繁忙的web服务器，可能有多个（可能上千个）客户</description></item><item><title>操作系统概念(03) 进程管理</title><link>https://blog.qiaocco.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B503-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</link><pubDate>Wed, 16 Jun 2021 11:29:12 +0800</pubDate><guid>https://blog.qiaocco.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B503-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</guid><description>进程管理 1. 进程概念 PCB，程序段，数据段三部分构成了进程实体 进程状态： 运行态：占有cpu,并且就在cpu上执行。 就绪态：进程等待分配cpu（</description></item><item><title>TCP的三次握手</title><link>https://blog.qiaocco.com/post/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B/</link><pubDate>Wed, 28 Apr 2021 18:11:49 +0800</pubDate><guid>https://blog.qiaocco.com/post/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B/</guid><description>TCP三次握手的过程 ​ 假设 A 为客户端，B 为服务器端。 首先 B 处于 LISTEN（监听）状态，等待客户的连接请求。 A 向 B 发送连接请求报文，SYN=</description></item><item><title>k8s in action(07) Mounting storage volumes into the Pod’s containers</title><link>https://blog.qiaocco.com/post/k8s-in-action07-mounting-storage-volumes-into-the-pods-containers/</link><pubDate>Wed, 28 Apr 2021 14:15:49 +0800</pubDate><guid>https://blog.qiaocco.com/post/k8s-in-action07-mounting-storage-volumes-into-the-pods-containers/</guid><description>重点 容器重启后，能够持久化文件 在同一个pod的不同容器间共享文件 在不同pod间共享文件 挂载网络存储 获取host node的文件系统 7.1 引入Vol</description></item><item><title>关于</title><link>https://blog.qiaocco.com/post/about_me/</link><pubDate>Sat, 24 Apr 2021 12:06:14 +0800</pubDate><guid>https://blog.qiaocco.com/post/about_me/</guid><description>我是谁？ hhh</description></item><item><title>k8s in action(06) Managing the lifecycle of the Pod’s containers</title><link>https://blog.qiaocco.com/post/k8s-in-action06-managing-the-lifecycle-of-the-pods-containers/</link><pubDate>Thu, 22 Apr 2021 18:13:42 +0800</pubDate><guid>https://blog.qiaocco.com/post/k8s-in-action06-managing-the-lifecycle-of-the-pods-containers/</guid><description>重点 检查pod状态 利用存活探针检查健康状态 使用pod钩子，在启停时做额外的操作 理解pod的声明周期 理解pod状态 创建pod之后，我们需要查看</description></item><item><title>k8s in action(05) running app in pods</title><link>https://blog.qiaocco.com/post/k8s-in-action05-running-app-in-pods/</link><pubDate>Wed, 14 Apr 2021 23:11:31 +0800</pubDate><guid>https://blog.qiaocco.com/post/k8s-in-action05-running-app-in-pods/</guid><description>重点 理解如何创建和何时创建group containers 用yaml文件创建pod，运行app 与app交互，查看log和运行环境 扩展主容器，增加sidecar容</description></item><item><title>k8s备忘单</title><link>https://blog.qiaocco.com/post/k8s%E5%A4%87%E5%BF%98%E5%8D%95/</link><pubDate>Thu, 08 Apr 2021 13:51:15 +0800</pubDate><guid>https://blog.qiaocco.com/post/k8s%E5%A4%87%E5%BF%98%E5%8D%95/</guid><description>查看配置 1 kubectl config view # 查看配置信息 命名空间 1 2 3 kubectl config set-context --current --namespace=&amp;lt;命名空间&amp;gt; # 验证之 kubectl config view | grep namespace</description></item><item><title>k8s in action(03) deploying your first app</title><link>https://blog.qiaocco.com/post/k8s-in-action03-deploying-your-first-app/</link><pubDate>Fri, 15 Jan 2021 23:11:31 +0800</pubDate><guid>https://blog.qiaocco.com/post/k8s-in-action03-deploying-your-first-app/</guid><description>3.1 安装k8s集群 使用云厂商提供的k8s服务 kubeadm(https://github.com/kubernetes/kubeadm) 使用Docker Desktop（mac，win） 使用minikube(http://github</description></item><item><title>使用github actions部署博客</title><link>https://blog.qiaocco.com/post/use_github_actions/</link><pubDate>Sun, 10 Jan 2021 22:20:24 +0800</pubDate><guid>https://blog.qiaocco.com/post/use_github_actions/</guid><description>背景 使用hugo搭建了博客，可以正常运行了。博客分为两个仓库，分别是源代码和编译后的静态文件。 1 2 3 4 # github 1. blog仓库：存放源代码 2. qia</description></item><item><title>k8s in action(02) understanding containers</title><link>https://blog.qiaocco.com/post/k8s-in-action02-understanding-containers/</link><pubDate>Sat, 02 Jan 2021 13:51:15 +0800</pubDate><guid>https://blog.qiaocco.com/post/k8s-in-action02-understanding-containers/</guid><description>创建docker镜像 创建app.js文件 创建Dockerfile 1 2 3 4 FROMnode:16COPY app.js /app.jsCOPY html/ /htmlENTRYPOINT [&amp;#34;node&amp;#34;, &amp;#34;app.js&amp;#34;] 构建： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 构建 docker build -t kiada:latest</description></item><item><title>搭建博客</title><link>https://blog.qiaocco.com/post/ceate_blog/</link><pubDate>Fri, 01 Jan 2021 22:29:27 +0800</pubDate><guid>https://blog.qiaocco.com/post/ceate_blog/</guid><description>安装hugo https://gohugo.io/ 创建博客 1 hugo new site blog 添加主题 1 git submodule add https://github.com/olOwOlo/hugo-theme-even themes/even 创建第一篇文章 1 hugo new post/first_post.md 自定义域名 https://gohugo.io/hosting-and-deployment/hosting-on-github/</description></item></channel></rss>